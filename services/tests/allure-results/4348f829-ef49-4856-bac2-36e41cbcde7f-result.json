{"name": "test_get_updated_ticket", "status": "failed", "statusDetails": {"message": "AssertionError: Expected status code 200 but got 404\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "def test_get_updated_ticket():\n        \"\"\"Test that a GET request after updating a ticket returns the correct updated ticket\"\"\"\n        update_data = {\n            \"name\": \"John\",\n            \"from\": \"City A\",\n            \"to\": \"City B\",\n            \"day\": \"Tuesday\"\n        }\n        # Update ticket\n        response = requests.put(f\"{url}/2\", json=update_data)\n    \n        # Assert status code is 200 (OK) after update\n        assert response.status_code == 200, f\"Expected status code 200 but got {response.status_code}\"\n    \n        # Now, get the updated ticket details\n        get_response = requests.get(f\"{url}/2\")\n>       assert get_response.status_code == 200, f\"Expected status code 200 but got {get_response.status_code}\"\nE       AssertionError: Expected status code 200 but got 404\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntest_tickets_1.py:94: AssertionError"}, "description": "Test that a GET request after updating a ticket returns the correct updated ticket", "start": 1735390148524, "stop": 1735390148531, "uuid": "c280311a-16da-45c0-8da9-542dc47152cb", "historyId": "98a35422782ce18577ddfe313154a14d", "testCaseId": "98a35422782ce18577ddfe313154a14d", "fullName": "test_tickets_1#test_get_updated_ticket", "labels": [{"name": "suite", "value": "test_tickets_1"}, {"name": "host", "value": "Luffy"}, {"name": "thread", "value": "6072-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_tickets_1"}]}